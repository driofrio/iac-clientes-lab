name: Despliegue completo del código

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Autenticación en GCP
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v1

    - name: Build and Push Docker Image to GCR
      run: |
        docker build -t us-docker.pkg.dev/${{ steps.auth.outputs.project_id }}/gcr-compat/clientes-api ./java-service
        gcloud auth configure-docker us-docker.pkg.dev --quiet
        docker push us-docker.pkg.dev/${{ steps.auth.outputs.project_id }}/gcr-compat/clientes-api
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Read Terraform Outputs
      id: tf_outputs
      run: |
        DB_HOST=$(terraform -chdir=terraform output -raw sql_instance_connection_name)
        echo "db_host=$DB_HOST" >> $GITHUB_OUTPUT

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy clientes-api \
          --image=us-docker.pkg.dev/${{ steps.auth.outputs.project_id }}/gcr-compat/clientes-api \
          --platform=managed \
          --region=us-central1 \
          --allow-unauthenticated \
          --set-env-vars=DB_HOST=${{ steps.tf_outputs.outputs.db_host }},DB_USER=admin,DB_PASSWORD=admin1234

    - name: Ejecutar script SQL init.sql
      run: |
        gcloud sql connect clientes-db --user=admin --quiet < sql/init.sql

    - name: Copiar index.html a la VM
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        scp -o StrictHostKeyChecking=no -i key.pem web/index.html debian@<IP_VM>:/tmp/index.html
        ssh -o StrictHostKeyChecking=no -i key.pem debian@<IP_VM> "sudo mv /tmp/index.html /var/www/html/index.html"
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
